version: "3.3"
services:
  web:
    container_name: black_dishes_web
    restart: always
    stdin_open: true
    tty: true
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8885:8885"
    command: bash -c "gunicorn config.wsgi:application --bind 0.0.0.0:8885 --timeout 600"
    env_file:
      - .env.deploy
    volumes:
      - ./:/src/
      - static_volume:/usr/local/lib/python3.8/site-packages/django/contrib/admin/static
    depends_on:
      - postgres


  postgres:
    container_name: black_dishes_postgres
    image: postgres
    command: >
      -c work_mem=10GB
      -c maintenance_work_mem=10GB
      -c max_wal_size=2GB
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - .env.deploy


  nginx:
    container_name: black_dishes_nginx
    image: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/web/staticfiles
    ports:
      - "8883:8883"
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:

#  migration:
#    image: ""
#    command: bash -c "sh /src/entrypoint.sh"
#    env_file:
#      - .env.deploy
#    volumes:
#      - ./:/src/
#    depends_on:
#      - postgres

#  redis:
#    container_name:
#    image: "redis"
#    restart: always
#    ports:
#      - "6379:6379"

#  celery:
#    image: ""
#    restart: always
#    command: bash -c "
#      celery -A config worker -l INFO
#      "
#    volumes:
#      - ./src/:/usr/src/app/
#    env_file:
#      - .env.deploy
#    depends_on:
#      - redis
#      - postgres
#      - web

#  celery-beat:
#    image: ""
#    restart: always
#    command: bash -c "
#      celery -A config beat -l INFO
#      "
#    volumes:
#      - ./src/:/usr/src/app/
#    env_file:
#      - .env.deploy
#    depends_on:
#      - redis
#      - postgres
#      - web
